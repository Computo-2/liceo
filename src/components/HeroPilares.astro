---
interface Props {
  title?: string;
  subtitle?: string;
  ctaHref?: string;
  ctaLabel?: string;
  deviceImgSrc?: string;
  deviceImgAlt?: string;
  bgImgSrc?: string;
}

const {
  title = "Titulo del Hero",
  subtitle = "Subtítulo del Hero",
  ctaHref = "#mosaico",
  ctaLabel = "Más información",
  deviceImgSrc = "https://picsum.photos/id/1015/1200/800",
  deviceImgAlt = "Vista del producto en una laptop",
  bgImgSrc = "https://picsum.photos/id/1056/1600/900"
} = Astro.props;

---

<section class="bg-fade-target relative overflow-hidden">
  <div class="absolute inset-0 -z-10">
    <img src={bgImgSrc} alt="" class="h-full w-full object-cover" loading="lazy" decoding="async" />
    <div class="absolute inset-0 bg-gradient-to-t from-white via-white/90 to-white"></div>
  </div>

  <div class="mx-auto max-w-6xl px-6 pt-16 text-center sm:pt-20 md:pt-24">
  <div class="mb-3 flex items-center justify-center gap-2 text-gray-700">
    <span class="text-sm font-medium">Liceo Michoacano</span>
  </div>

  <h1 class="mx-auto max-w-5xl text-[clamp(2.75rem,6.2vw,4.75rem)] font-extrabold leading-[1.05] tracking-[-0.01em]">
    {title}
  </h1>

  <p class="mx-auto mt-4 max-w-[42rem] text-[15px] text-gray-600">
    {subtitle}
  </p>

  <div class="mt-6">
    <a href={ctaHref} class="text-base font-medium text-blue-700 underline underline-offset-4 hover:text-blue-800">
      {ctaLabel}
    </a>
  </div>
  <div class="mt-4 mb-4 flex justify-center">
    <svg class="h-6 w-6 animate-bounce text-blue-700" fill="none" viewBox="0 0 24 24">
      <path stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" d="M12 4v14m0 0l-6-6m6 6l6-6"/>
    </svg>
  </div>
</div>

<div class="mt-20 mx-auto max-w-[80%] h-200 px-0 pb-14 ">

<div aria-hidden="true" class="mt-100 pointer-events-none absolute left-40 top-[60%] hidden -translate-y-1/2 lg:block">
  <div class="h-200 w-32 rounded-2xl bg-blue-600/90"></div>
</div>
<div aria-hidden="true" class="mt-100 pointer-events-none absolute right-40 top-[60%] hidden -translate-y-1/2 lg:block">
  <div class="h-200 w-32 rounded-2xl bg-blue-600/90"></div>
</div>

  <div class="relative mx-auto overflow-hidden h-[80vh] lg:h-auto rounded-[1.75rem] border border-gray-200 bg-white shadow-[0_20px_60px_rgba(0,0,0,0.12)]">
    <div class="relative h-5 lg:h-9 w-full bg-gray-900">
      <div class="absolute left-1/2 top-1/2 h-2.5 w-2.5 -translate-x-1/2 -translate-y-1/2 rounded-full bg-gray-700"></div>
    </div>
<div class="relative inline-block w-full h-full lg:h-auto">
  <img
    src={deviceImgSrc}
    alt={deviceImgAlt}
    class="block w-full h-full lg:h-auto"
    loading="eager"
    decoding="async"
  />
  <div class="lg:mt-10 absolute inset-x-4 lg:inset-x-6 bottom-10 md:bottom-120 lg:bottom-100 z-30 max-w-xl mx-auto max-w-3xl px-6 pt-[40vh] pb-24">
    <h3 class="text-2xl lg:text-3xl font-bold tracking-tight">
      Excelencia Académica
    </h3>
    <p class="mt-1 text-base lg:text-lg text-gray-700">
      Intelectuales de Prestigio.
    </p>
    <p class="mt-3 text-sm lg:text-base leading-relaxed text-gray-800">
      Con más de tres décadas de experiencia, hemos desarrollado un método propio especializado en las necesidades y características de esta etapa formativa. Promovemos la apertura, el cuestionamiento y la reflexión sobre el conocimiento, con grupos reducidos y atención personalizada. Somos la única preparatoria en Morelia incorporada a la UNAM, a través del mejor plan de estudios para bachillerato internacional el CCH.
    </p>
  </div>

  <div class="absolute inset-y-0 left-0 w-3 bg-gray-900"></div>

  <div class="absolute inset-y-0 right-0 w-3 bg-gray-900"></div>

   
</div>

<div aria-hidden="true" class="absolute inset-x-1 bottom-0 h-6 bg-gray-900 lg:hidden"></div>
   <div aria-hidden="true" class="absolute bottom-1 left-1/2 -translate-x-1/2 h-1.5 w-16 rounded-full bg-gray-700 lg:hidden"></div>

  </div>
</div>

</section>
<style is:inline>
  .pc-willchange { will-change: transform, opacity; transform-origin: center top; }
</style>

<script is:inline>
(() => {
  let frame = document.querySelector('div.rounded-\\[1\\.75rem\\].overflow-hidden.border.bg-white')
    || document.querySelector('div[class*="rounded-\\[1\\.75rem\\]"][class*="overflow-hidden"][class*="border"][class*="bg-white"]');
  if (!frame) return;

  const stage   = frame.parentElement;
  const section = frame.closest('section');
  if (!stage || !section) return;

  let bgLayer = section.querySelector('div.absolute.inset-0.-z-10')
    || section.querySelector('div[class*="absolute"][class*="inset-0"][class*="-z-10"]');
  let gradientLayer = section.querySelector('div.bg-gradient-to-t')
    || section.querySelector('div[class*="bg-gradient-to-"]');
  const pills = stage.querySelectorAll('div[aria-hidden="true"].pointer-events-none');

  const minScale = 0.90;
  const maxScale = 1.38;


  const cfgMobile = {
    hideAtVh: 0.86,
    hideLeadPx: 48,
    appearMargin: 0.12,
    showLeadPx: 16,
    collapseStart: 0.78,
    extraLiftPx: 96
  };


  const cfgDesktop = {
    hideAtVh: 0.80, 
    hideLeadPx: 98,     
    appearMargin: 0.12,
    showLeadPx: 20,
    collapseStart: 0.72,
    extraLiftPx: 120
  };

  const isDesktop = () => window.matchMedia('(min-width: 1024px)').matches;
  const getCfg = () => (isDesktop() ? cfgDesktop : cfgMobile);

  frame.style.willChange = 'transform';
  frame.style.transformOrigin = 'center center';
  stage.style.overflow = 'visible';
  stage.style.willChange = (stage.style.willChange ? stage.style.willChange + ', ' : '') + 'height, transform';
  if (bgLayer) bgLayer.style.willChange = 'opacity';
  if (gradientLayer) gradientLayer.style.willChange = 'opacity';

  const clamp = (v,a,b)=>Math.min(b,Math.max(a,v));

 
  let lastY = window.pageYOffset || document.documentElement.scrollTop || 0;
  let dir   = 'down';

 
  const ref = { top: 0, height: 0 };
  function measureRef() {
    const prevH = stage.style.height;
    const prevT = stage.style.transform;
    stage.style.height = '';
    stage.style.transform = '';
    ref.height = Math.max(stage.scrollHeight, stage.offsetHeight);
    const rect = stage.getBoundingClientRect();
    ref.top = rect.top + (window.scrollY || document.documentElement.scrollTop || 0);
    stage.style.height = prevH;
    stage.style.transform = prevT;
    if (!ref.height) ref.height = frame.offsetHeight;
  }
  measureRef();

  let lockedHidden = false;
  let currentH = NaN;

  function apply() {
    const { hideAtVh, hideLeadPx, appearMargin, showLeadPx, collapseStart, extraLiftPx } = getCfg();

    const vh = window.innerHeight;
    const Y  = window.pageYOffset || document.documentElement.scrollTop || 0;

    const t = clamp((vh + Y - ref.top) / (vh + ref.height), 0, 1);
    const scale = minScale + (maxScale - minScale) * t;
    frame.style.transform = `translateZ(0) scale(${scale})`;

    const rect = stage.getBoundingClientRect();
    const isIntersecting = rect.bottom > 0 && rect.top < vh;

 
    const bottomFromViewport = (ref.top + ref.height) - Y;
    const hideTrigger = (bottomFromViewport <= hideAtVh * vh + hideLeadPx) || (t >= 0.995);
    const topFromViewport = ref.top - Y;
    const showTrigger = (topFromViewport <= appearMargin * vh + showLeadPx) && isIntersecting;

    if (dir === 'down' && hideTrigger) lockedHidden = true;
    if (dir === 'up'   && showTrigger) lockedHidden = false;

    const shouldHide = lockedHidden;

    if (shouldHide) document.documentElement.setAttribute('data-hero-bg', 'off');
    else            document.documentElement.removeAttribute('data-hero-bg');

    frame.style.visibility = shouldHide ? 'hidden' : 'visible';
    frame.style.pointerEvents = shouldHide ? 'none' : 'auto';
    pills.forEach(p => {
      p.style.visibility = shouldHide ? 'hidden' : 'visible';
      p.style.pointerEvents = shouldHide ? 'none' : 'auto';
    });

    if (bgLayer)       bgLayer.style.opacity = shouldHide ? '0' : '1';
    if (gradientLayer) gradientLayer.style.opacity = shouldHide ? '0' : '1';

    let c = clamp((t - collapseStart) / (1 - collapseStart), 0, 1);
    if (!lockedHidden && dir === 'up') c = 0;

    const lift = -(extraLiftPx * c);
    stage.style.transform = c > 0 ? `translateY(${lift}px)` : '';

    if (c > 0 || lockedHidden) {
      stage.style.overflow = 'hidden';
      const targetH = Math.max(0, Math.round(ref.height * (1 - c)));
      if (Number.isNaN(currentH) || Math.abs(targetH - currentH) > 1) {
        stage.style.height = targetH + 'px';
        currentH = targetH;
      }
      stage.style.transition = 'height .25s linear, transform .25s linear';
    } else {
      if (stage.style.height) {
        stage.style.height = '';
        currentH = NaN;
      }
      stage.style.overflow = 'visible';
      stage.style.transition = '';
    }

    if (lockedHidden && currentH !== 0) {
      stage.style.height = '0px';
      stage.style.transform = `translateY(${-extraLiftPx}px)`;
      stage.style.overflow = 'hidden';
      currentH = 0;
    }
  }

  let ticking = false;
  const onScroll = () => {
    const y = window.pageYOffset || document.documentElement.scrollTop || 0;
    dir = (y < lastY) ? 'up' : 'down';
    lastY = y;

    if (ticking) return;
    ticking = true;
    requestAnimationFrame(() => { apply(); ticking = false; });
  };

  window.addEventListener('scroll', onScroll, { passive: true });
  window.addEventListener('resize', () => { measureRef(); apply(); });

  apply();
})();
</script>



<style>
.bg-fade-target { opacity: 1; transition: opacity .45s ease; }

:root[data-hero-bg="off"] .bg-fade-target {
  opacity: 0;         
  pointer-events: none; 
}

@media (prefers-reduced-motion: reduce) {
  .bg-fade-target { transition: none !important; }
}

</style>


