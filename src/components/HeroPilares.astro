---
interface Props {
  title?: string;
  subtitle?: string;
  ctaHref?: string;
  ctaLabel?: string;
  deviceImgSrc?: string;
  deviceImgAlt?: string;
  bgImgSrc?: string;
}

const {
  title = "Un aprendizaje que ilumina el futuro",
  subtitle = "Las herramientas de nuestra plataforma funcionan en conjunto para transformar la enseñanza y el aprendizaje de manera que todos los estudiantes y educadores puedan alcanzar su potencial.",
  ctaHref = "#mosaico",
  ctaLabel = "Más información",
  // Screenshot del “dispositivo”
  deviceImgSrc = "https://picsum.photos/id/1015/1200/800", // paisaje claro
  deviceImgAlt = "Vista del producto en una laptop",
  // Fondo tipo bosque
  bgImgSrc = "https://picsum.photos/id/1056/1600/900" // bosque/árboles
} = Astro.props;

---

<section class="relative overflow-hidden">
  <!-- Fondo -->
  <div class="absolute inset-0 -z-10">
    <img src={bgImgSrc} alt="" class="h-full w-full object-cover" loading="lazy" decoding="async" />
    <div class="absolute inset-0 bg-gradient-to-t from-white via-white/90 to-white"></div>
  </div>

  <!-- Texto -->
  <div class="mx-auto max-w-6xl px-6 pt-16 text-center sm:pt-20 md:pt-24">
  <!-- Eyebrow / logo pequeño -->
  <div class="mb-3 flex items-center justify-center gap-2 text-gray-700">
    <!-- Si no tienes un logo, deja el span como eyebrow -->
    <span class="text-sm font-medium">Google for Education</span>
  </div>

  <!-- H1 más compacto y grande -->
  <h1 class="mx-auto max-w-5xl text-[clamp(2.75rem,6.2vw,4.75rem)] font-extrabold leading-[1.05] tracking-[-0.01em]">
    {title}
  </h1>

  <!-- Subtítulo más angosto y claro -->
  <p class="mx-auto mt-4 max-w-[42rem] text-[15px] text-gray-600">
    {subtitle}
  </p>

  <div class="mt-6">
    <a href={ctaHref} class="text-base font-medium text-blue-700 underline underline-offset-4 hover:text-blue-800">
      {ctaLabel}
    </a>
  </div>
  <div class="mt-4 mb-4 flex justify-center">
    <svg class="h-6 w-6 animate-bounce text-blue-700" fill="none" viewBox="0 0 24 24">
      <path stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" d="M12 4v14m0 0l-6-6m6 6l6-6"/>
    </svg>
  </div>
</div>



  <!-- Mockup -->
  <!-- acercamos el mockup al título y mejoramos el marco -->
<div class="mt-40 mx-auto max-w-[80%] h-200 px-0 pb-14 ">
    <!-- Pastillas verdes decorativas -->
  <!-- izquierda -->
<div aria-hidden="true" class="mt-100 pointer-events-none absolute left-40 top-[60%] hidden -translate-y-1/2 lg:block">
  <div class="h-200 w-32 rounded-2xl bg-blue-600/90"></div>
</div>
<!-- derecha -->
<div aria-hidden="true" class="mt-100 pointer-events-none absolute right-40 top-[60%] hidden -translate-y-1/2 lg:block">
  <div class="h-200 w-32 rounded-2xl bg-blue-600/90"></div>
</div>

  <div class="relative mx-auto overflow-hidden rounded-[1.75rem] border border-gray-200 bg-white shadow-[0_20px_60px_rgba(0,0,0,0.12)]">
    <!-- bisel superior más alto -->
    <div class="relative h-9 w-full bg-gray-900">
      <!-- cámara centrada -->
      <div class="absolute left-1/2 top-1/2 h-2.5 w-2.5 -translate-x-1/2 -translate-y-1/2 rounded-full bg-gray-700"></div>
    </div>
    <!-- Contenedor de la imagen (relative) -->
<div class="relative inline-block w-full">
  <img
    src={deviceImgSrc}
    alt={deviceImgAlt}
    class="block w-full h-auto"
    loading="eager"
    decoding="async"
  />

  <!-- Barra izquierda pegada al borde -->
  <div class="absolute inset-y-0 left-0 w-3 bg-gray-900"></div>

  <!-- Barra derecha pegada al borde -->
  <div class="absolute inset-y-0 right-0 w-3 bg-gray-900"></div>
</div>

  </div>
</div>


</section>

<style is:inline>
  /* opcional: hace el zoom más suave y habilita capas */
  .pc-willchange { will-change: transform, opacity; transform-origin: center top; }
</style>

<script is:inline>
(function () {
  // Marco de la “PC”: tu div con rounded-[1.75rem] + overflow-hidden
  const frame = document.querySelector('div.rounded-\\[1\\.75rem\\].overflow-hidden');
  if (!frame) return;

  // El "stage" es su contenedor directo (tu <div class="mt-40 mx-auto max-w-[80%] ...">)
  const stage = frame.parentElement;

  // Pastillas (para ocultarlas al mismo tiempo que la PC)
  const pills = stage.querySelectorAll('div[aria-hidden="true"].pointer-events-none');

  // ===== perillas =====
  const minScale = 0.95;   // tamaño al entrar (más pequeño = se nota más el zoom)
  const maxScale = 1.35;   // tamaño al salir (a qué tamaño máximo llega)
  const hideAtVh = 0.72;   // punto de corte: cuando el bottom del stage cruza 66% del viewport, se oculta sin fade

  // QoL/perf
  frame.style.willChange = 'transform, opacity';
  frame.style.transformOrigin = 'center top';

  const clamp = (v,a,b)=>Math.min(b,Math.max(a,v));

  function apply() {
    const vh   = window.innerHeight;
    const rect = stage.getBoundingClientRect();

    // Progreso de paso por el viewport (0→1). Sólo lo usamos para ESCALA.
    const t = clamp((vh - rect.top) / (vh + rect.height), 0, 1);

    // Zoom (sin transparencia progresiva)
    const scale = minScale + (maxScale - minScale) * t;
    frame.style.transform = `translate3d(0,0,0) scale(${scale})`;
    frame.style.opacity   = '1'; // siempre opaca mientras sea visible

    // Punto de corte (oculta de golpe PC y pastillas)
    const shouldHide = rect.bottom <= vh * hideAtVh;
    const vis = shouldHide ? 'hidden' : 'visible';

    frame.style.visibility = vis;
    // Opcional: quita clicks cuando esté oculta (por si tuvieras elementos interactivos detrás)
    frame.style.pointerEvents = shouldHide ? 'none' : 'auto';

    pills.forEach(p => {
      p.style.visibility = vis;
      p.style.pointerEvents = shouldHide ? 'none' : 'auto';
      // Sin efectos progresivos:
      p.style.opacity = '1';
      p.style.transform = 'none';
    });
  }

  let ticking = false;
  function onScroll() {
    if (ticking) return;
    ticking = true;
    requestAnimationFrame(() => { apply(); ticking = false; });
  }

  window.addEventListener('scroll', onScroll, { passive: true });
  window.addEventListener('resize', apply);
  apply(); // primer pintado
})();
</script>

